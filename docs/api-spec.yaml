openapi: 3.0.0
info:
  title: TODO API
  version: 1.0.0
  description: TODOアプリケーションのAPI仕様

servers:
  - url: /api
    description: APIのベースURL

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          maxLength: 255
        description:
          type: string
        completed:
          type: boolean
          default: false
        priority:
          type: string
          enum: [HIGH, MEDIUM, LOW]
        categoryId:
          type: integer
          format: int64
        dueDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title

    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 100
        color:
          type: string
          pattern: "^#[0-9A-Fa-f]{6}$"
        createdAt:
          type: string
          format: date-time
      required:
        - name
        - color

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              value:
                type: string
              constraint:
                type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            email:
              type: string
            name:
              type: string

  responses:
    UnauthorizedError:
      description: 認証エラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ValidationError:
      description: バリデーションエラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

paths:
  /auth/login:
    post:
      summary: ログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        "200":
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /auth/register:
    post:
      summary: ユーザー登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                name:
                  type: string
              required:
                - email
                - password
                - name
      responses:
        "201":
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          $ref: "#/components/responses/ValidationError"

  /tasks:
    get:
      summary: タスク一覧の取得
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            default: "createdAt:desc"
        - name: completed
          in: query
          schema:
            type: boolean
        - name: priority
          in: query
          schema:
            type: string
            enum: [HIGH, MEDIUM, LOW]
        - name: categoryId
          in: query
          schema:
            type: integer
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
      security:
        - BearerAuth: []

    post:
      summary: タスクの作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
        - BearerAuth: []

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: タスク詳細の取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: タスクが見つからない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - BearerAuth: []
    put:
      summary: タスクの更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
      security:
        - BearerAuth: []
    delete:
      summary: タスクの削除
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
      security:
        - BearerAuth: []

  /categories:
    get:
      summary: カテゴリ一覧の取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
      security:
        - BearerAuth: []
    post:
      summary: カテゴリの作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "201":
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
      security:
        - BearerAuth: []
